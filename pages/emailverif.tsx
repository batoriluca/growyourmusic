var jwt = require('jsonwebtoken');
import 'react-toastify/dist/ReactToastify.css';
import { ToastContainer, toast } from 'react-toastify';
import React, { useEffect, useState } from "react"
import { useFormik } from 'formik';
import * as Yup from 'yup'
import { useRouter } from 'next/router';
import Cookies from 'js-cookie';
import Head from 'next/head'
import style from '../styles/emailverif.module.css'
import Script from 'next/script'

const initialValues = {
  verif_code: "",
}

export default function Home() {

  const [username, setUsername] = useState()
  const [email, setEmail] = useState()

  const router = useRouter();

  const veritySchema = Yup.object({
    verif_code: Yup.number().integer("It must be number").min(5, "It must be at least 5 char").required("Please Enter GYM-code"),
  })


  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({
    initialValues: initialValues,
    validationSchema: veritySchema,

    onSubmit: async (values, action) => {

      const verif_code = values.verif_code;

      const data = { username, email, verif_code };
      let res = await fetch('http://localhost:3000/api/emailverif', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })

      let response = await res.json()
      if (response.sucess) {
        localStorage.removeItem('l_token')

        toast.success(response.msg, {
          position: "top-right",
          autoClose: 2500,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });

        localStorage.setItem('l_token', response.token)
        Cookies.set('token', response.token)
        setTimeout(() => {
          router.push("/emailverif")
        }, 500);
        action.resetForm();
      } else {
        toast.error(response.msg, {
          position: "top-right",
          autoClose: 2500,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
      }
    }
  })

  return (
    <>
      <Head>
        <title>Creează Cont -- Grow Your Music</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ToastContainer
        position="top-right"
        autoClose={2500}
        hideProgressBar={false}
        newestOnTop={false}
        limit={5}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
      />
      <div className={style.container}>
        <div className={style.sc1} id="sc1">
          <div className={style.intro}>
            <h3>Creează Cont</h3>
            <h6>Am trimis un cod de verificare la adresa de email: example@gmail.com</h6>
            <form onSubmit={handleSubmit}>
              <input
                type="number"
                maxLength={6}
                placeholder="Cod de verificare"
                id="verif_code"
                onChange={handleChange}
                onBlur={handleBlur}
                value={values.verif_code || ""}
                name='verif_code'
              />
              {errors.verif_code && touched.verif_code ? <p className={style.from_error}>{errors.verif_code}</p> : null}
              <input
                className={style.verif}
                type="submit"
                defaultValue="Verifică codul"
              />
            </form>
            <img src="/img/Group 16.png" className={style.logo} alt="" />
            <p>pentru artisti &amp; producatori la inceput de drum</p>
          </div>
        </div>
      </div>

    </>
  )
}
